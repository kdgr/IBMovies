apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-allopen'
apply plugin: 'androidx.navigation.safeargs.kotlin'

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'com.kaandogruer.ibmovies.testing.OpenClass'
}
android {
    compileSdkVersion build_versions.compile_sdk
    buildToolsVersion build_versions.build_tools
    defaultConfig {
        applicationId "com.kaandogruer.ibmovies"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        multiDexEnabled true
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.kaandogruer.ibmovies.util.GithubTestRunner"
    }
    buildTypes {
        debug {
            testCoverageEnabled !project.hasProperty('android.injected.invoked.from.ide')
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }
    lintOptions {
        lintConfig rootProject.file('lint.xml')
    }
}

jacoco {
    toolVersion = "0.7.4+"
}

dependencies {
    implementation deps.app_compat
    implementation deps.recyclerview
    implementation deps.cardview
    implementation deps.material
    implementation deps.core_ktx
    implementation deps.transition
    implementation deps.fragment.testing
    implementation deps.navigation.fragment_ktx
    implementation deps.room.runtime
    implementation deps.lifecycle.livedata_ktx
    implementation deps.lifecycle.runtime
    implementation deps.lifecycle.java8
    implementation deps.retrofit.runtime
    implementation deps.retrofit.gson
    implementation deps.glide.runtime


    implementation deps.dagger.runtime
    implementation deps.dagger.android
    implementation deps.dagger.android_support
    implementation deps.constraint_layout
    implementation deps.kotlin.stdlib

    implementation deps.timber
    implementation deps.avi
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    kapt deps.dagger.android_support_compiler
    kapt deps.dagger.compiler
    kapt deps.room.compiler
    kapt deps.lifecycle.compiler

    testImplementation deps.junit
    testImplementation deps.mock_web_server
    testImplementation deps.arch_core.testing
    testImplementation deps.mockito.core

    androidTestImplementation deps.atsl.core
    androidTestImplementation deps.atsl.ext_junit
    androidTestImplementation deps.atsl.runner
    androidTestImplementation deps.atsl.rules

    androidTestImplementation deps.app_compat
    androidTestImplementation deps.recyclerview
    androidTestImplementation deps.cardview
    androidTestImplementation deps.material

    androidTestImplementation deps.espresso.core
    androidTestImplementation deps.espresso.contrib

    androidTestImplementation deps.arch_core.testing
    androidTestImplementation deps.mockito.core
    androidTestImplementation deps.mockito.android

    debugImplementation 'com.readystatesoftware.chuck:library:1.1.0'
    releaseImplementation 'com.readystatesoftware.chuck:library-no-op:1.1.0'
    implementation 'com.android.support:palette-v7:28.0.0'
    implementation 'com.android.support:support-annotations:28.0.0'
    implementation "com.paulrybitskyi.persistentsearchview:persistentsearchview:1.1.3"
}

// we need all open to run tests which we enable only for debug builds.
project.tasks.whenTaskAdded {
    if (it.name == "testReleaseUnitTest") {
        it.enabled = false
    }
}